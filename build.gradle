buildscript {
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2" }
		maven { url "https://repo.spring.io/plugins-release" }
	}

	dependencies {
		classpath("io.spring.gradle:dependency-management-plugin:${springGradleDependencyManagementVersion}")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
		classpath("org.flywaydb:flyway-gradle-plugin:${flywayDbVersion}")
	}
}

List spockDependency = [
		"org.codehaus.groovy:groovy-all:${groovyVersion}",
		"org.spockframework:spock-core:${spockVersion}",
		"org.spockframework:spock-spring:${spockVersion}"
]

subprojects {
	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'idea'

	sourceCompatibility = 11

	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://repo.spring.io/plugins-release" }
	}

	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if (!it.exists()) {
				it.mkdirs()
			}
		}

		sourceSets*.resources.srcDirs*.each {
			if (!it.exists()) {
				it.mkdirs()
			}
		}
	}

	test{

	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'

		annotationProcessor("org.projectlombok:lombok:$lombokVersion")
		compile "org.projectlombok:lombok:$lombokVersion"

		testCompile spockDependency
	}
}
project(":skeleton-core") {
	dependencies {}
}

project(":skeleton-domain") {
	dependencies {
		compile project(":skeleton-core")
	}
}

project(":skeleton-api") {
	dependencies {
		compile project(":skeleton-core")
		compile project(":skeleton-domain")
	}
}